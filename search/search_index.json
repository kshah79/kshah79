{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#hi-this-is-kevin-shah","title":"Hi this is Kevin Shah","text":"<p>Hope this works</p>"},{"location":"Appendix/","title":"Appendix","text":"<p>Here is the team member appendix. Here is the actual website of our team: https://ethan-s-team-314.github.io/Team-Organization-and-Charter/Appendix/</p>"},{"location":"Appendix/#team-member-communication-modes","title":"Team Member Communication Modes:","text":"<p>|  Ethan Peterson: I = Text  II = Email III = Discord    |  |  2               I = ?     II = ?     III = ?          | |  3               I = ?     II = ?     III = ?          | |  4               I = ?     II = ?     III = ?          |</p> <p>Preference : Text</p>"},{"location":"Appendix/#meeting-schedule","title":"Meeting Schedule:","text":"<p>https://docs.google.com/spreadsheets/d/1dxgQQWTqI2chtbIeKYItjgQndEoy_80x/edit?gid=1078714301#gid=1078714301 (Click or copy the url into your browser, the url is open to the public to view.)</p>"},{"location":"Appendix/#title-meeting-coordination","title":"Title: Meeting Coordination","text":"<ol> <li>What method will you use to remind yourselves of meetings (a shared calendar?)</li> </ol> <p>Group text reminders.</p> <ol> <li>How will your team go about changing or adding meeting times?</li> </ol> <p>Group text and finding what times work for the team. Sometimes in person meetings will not be available for everybody so depending on the situation the team would have to discover what is necessary in order to get necessary communication.</p> <ol> <li>What's the preferred format for meetings (face-to-face or virtually)?</li> </ol> <p>Face to face is ideal for most situations however for assignments that are already mentioned late night hours is what works for most individuals however hours to meet is the forefront of this meeting creation.</p> <ol> <li>Are there any other procedures that your team feels are necessary? Describe them.</li> </ol> <p>To do lists and finding who is best at what while always ensuring that no one goes at a singular task alone for any reason.</p>"},{"location":"Appendix/#roles-and-responsibilities","title":"Roles and Responsibilities:","text":"<p>|  Ethan Peterson        =             Assignment Leader | |  2                     =                      ?        | |  3                     =                      ?        | |  4                     =                      ?        |   </p>"},{"location":"Appendix/#process-by-which-each-team-member-will-fulfill-each-project-role-and-responsibility","title":"Process by which each team member will fulfill each project role and responsibility:","text":"<p>The team will need to communicate and volunteer for each individual role based on what they believe is the most impactful towards creating a successful team. Who is more tactful at what would be a great starter question for this process.</p>"},{"location":"Appendix/#additional-questions","title":"Additional Questions:","text":"<ul> <li> <p>How often will you change project roles? Team members will change the project roles according to what the class demands of the team.</p> </li> <li> <p>How will you decide who is assigned to each role? The team will decide who occupies what role by collectively deciding what will need to be accomplished by the team.</p> </li> <li> <p>How will team members help one another meet their responsibilities?</p> </li> </ul> <p>By being responsible and stepping up to the task of getting quality work forward, the team will ensure that everyone meets what the team decides as being a responsible team member. A responsible team member fulfills their role, answers communication, steps up and takes action on new work, and a responsable member puts forward a plan of action to get what the team needs to get done. All processes for the team would need to be agreed upon by the assignment leader or project manager due to their responsibility in either assignments or projects.</p> <ul> <li>How will you identify and respond to situations in which the team must adjust roles and responsibilities?</li> </ul> <p>The team identifies this matter by the consequences of the teams actions. If a situation arrises in which a role must change the team will take action quickly and decisively. </p> <ul> <li>How will you track the team activities and milestones?</li> </ul> <p>By our to-do lists that need to be regularly communicated on our teams group chat. </p> <ul> <li>How will you assign technical responsibilities to the team members?</li> </ul> <p>The team assignment leader or project manager will make this responsibility for assignments or projects while the meeting leader is responsible in ensuring that team members understand the current to-do lists.</p>"},{"location":"Appendix/#team-coordination-accountability","title":"Team Coordination &amp; Accountability","text":"<p>Assignment Deadlines: Establish clear deadlines for each assignment and communicate them to all team members.</p> <p>Progress Checkpoints: Implement intermediate checkpoints to review progress and ensure tasks are on track. Final Review: Schedule a final review meeting before the submission deadline where each team member reviews and \"signs off\" on the assignment.</p> <p>Knowledge and Skill Requirements: Conduct an initial assessment to identify each team member's strengths and areas for improvement. For this situation it will be a simple team interview. </p> <p>Training and Resources: Provide necessary training and resources to fill any knowledge gaps.</p> <p>Mentorship: Pair less experienced members with mentors who can guide them through the assignment.</p> <p>Feedback Distribution and Action: Use Google Drive  to collect and distribute feedback from design reviews.</p> <p>Action Plan: Develop a clear action plan based on the feedback, assigning specific tasks to team members to address the feedback.</p> <p>Follow-Up Meetings: Schedule follow-up meetings to ensure feedback has been acted upon and improvements have been made. Addressing Missed Contributions and Accountability</p> <p>Missed Contributions: Address missed contributions immediately through direct communication with the involved team member.</p> <p>Root Cause Analysis: Identify the reasons for the missed contribution and provide support to resolve any issues.</p> <p>Reassignment: If necessary, reassign tasks to ensure project continuity.</p> <p>Accountability: Clearly define and communicate expectations for each team member.</p> <p>Regular Check-Ins: Hold regular check-in meetings to monitor progress and address any issues early.</p> <p>Peer Accountability: Encourage team members to hold each other accountable through open and respectful communication.</p> <p>Recognizing and Addressing Underperformance: Regularly monitor each team member's performance against set expectations.</p> <p>Support and Improvement Plan: If a team member is underperforming, provide constructive feedback and develop a support plan to help them improve.</p> <p>Consequences: If there is no improvement despite support, the team must consider implementing consequences such as reassigning tasks or, in extreme cases, issuing a \"pink slip\" to remove the team member from the project.</p>"},{"location":"Component_Selection/","title":"EGR 314 - Component Selection Report","text":""},{"location":"Component_Selection/#name-kevin-shah","title":"Name: Kevin Shah","text":""},{"location":"Component_Selection/#course-egr-314","title":"Course: EGR 314","text":""},{"location":"Component_Selection/#assignment-component-selection","title":"Assignment: Component Selection","text":""},{"location":"Component_Selection/#link-to-the-docs-click-here","title":"Link to the Docs: Click here)","text":""},{"location":"Component_Selection/#introduction","title":"Introduction","text":"<p>This report includes multiple solutions for each major component of our design. I have considered and documented all the factors like cost, surface-mount compatibility, ease of integration, power efficiency, and performance. Each selected component is justified with a strong rationale based on the project requirements.</p>"},{"location":"Component_Selection/#major-component-selection","title":"Major Component Selection","text":""},{"location":"Component_Selection/#21-microcontroller-selection","title":"2.1 Microcontroller Selection","text":"<p>The microcontroller is the most crucial part responsible for processing sensor data, managing communication, and executing the tasks between different modules and components.</p>"},{"location":"Component_Selection/#microcontroller-options","title":"Microcontroller Options","text":"Microcontroller Description Photo Pros Cons Cost Link Microchip PIC18F47Q10 8-bit microcontroller, provides UART interfaces, SMD Package Runs on low power, supports UART communication, suitable for modular system Less processing power (Compared to 32-bit MCUs) $0.00 Link ESP32-WROOM-32 32-bit MCU with Wi-Fi and Bluetooth High performance, wireless communication Requires more power (compared to PIC) $0.00 Link STM32F103C8T6 32-bit ARM Cortex-M3 Most powerful, efficient, widely used in industry Complex to program, additional cost $6.08 Link"},{"location":"Component_Selection/#microcontroller-requirements-and-pin-allocation","title":"Microcontroller Requirements and Pin Allocation","text":"Peripheral Requirement UART Minimum 3 for communication between modules I2C Required for LCD and sensor communication ADC Required for water turbine sensor input GPIO Needed for additional controls and indicators PWM Needed for LED indicators or actuators Power &amp; GND Stable 3.3V and 5V power"},{"location":"Component_Selection/#optimal-choice","title":"Optimal Choice:","text":"<p>The PIC18F47Q10 was chosen for its efficient power consumption, UART communication support, and MPLAB X compatibility. Additionally, this component is offered in an SMD packaging, ensuring it adheres to EGR 314 specifications.</p>"},{"location":"Component_Selection/#22-wi-fi-module-selection","title":"2.2 Wi-Fi Module Selection","text":"<p>Since our system required wireless communication, I evaluated multiple Wi-Fi enabled systems.</p>"},{"location":"Component_Selection/#wi-fi-module-options","title":"Wi-Fi Module Options","text":"Wi-Fi Module Description Photo Pros Cons Cost Link ESP32-WROOM-32 Integrated Wi-Fi and Bluetooth, used in many IoT devices High performance, dual core, class-provided Requires custom PCB design $0.00 Link ESP32-ESP8266-12E-32 Lower cost Wi-Fi module with UART support High performance, power-efficient, low cost Limited flexibility $10.00 Link RN4020 Bluetooth Bluetooth module Uses less power, cheaper than Wi-Fi options No Wi-Fi, limited communication options $11.61 Link"},{"location":"Component_Selection/#optimal-choice_1","title":"Optimal Choice:","text":"<p>ESP32-WROOM-32 was selected due to its built-in Wi-Fi and compatibility with the system. Also, it is provided in the class, so no additional cost is required.</p>"},{"location":"Component_Selection/#23-temperature-and-humidity-sensor-selection","title":"2.3 Temperature and Humidity Sensor Selection","text":"<p>The system required a reliable sensor to measure external conditions.</p>"},{"location":"Component_Selection/#sensor-options","title":"Sensor Options","text":"Sensor Description Photo Pros Cons Cost Link DHT11 Digital temperature and humidity sensor Low cost, easy to interface, widely available Less accurate than DHT22 $7.00 Link DHT22 Improved accuracy temperature and humidity sensor Better accuracy and temperature range Slightly more expensive $8.90 Link SHT31 High-accuracy sensor with I2C communication Most accurate, fast response time Most expensive $9.70 Link"},{"location":"Component_Selection/#24-water-flow-sensor-selection","title":"2.4 Water Flow Sensor Selection","text":"<p>For monitoring the flow of water, I compared several sensors.</p>"},{"location":"Component_Selection/#water-flow-sensor-options","title":"Water Flow Sensor Options","text":"Sensor Description Photo Pros Cons Cost Link DFRobot SEN0229 5V water turbine sensor Compact, easy to interface Requires 5V power $8.16 Link YF-S201 Hall effect-based water flow sensor Improved accuracy Requires additional conditioning circuit $9.50 Link FS300A High precision industrial-grade sensor Most accurate, fast response time Most expensive $11.00 Link"},{"location":"Component_Selection/#optimal-choice_2","title":"Optimal Choice:","text":"<p>DFRobot SEN0229 was selected due to its sufficient precision and ease of integration with the system. It supports SMD integration.</p>"},{"location":"Component_Selection/#25-lcd-display-selection","title":"2.5 LCD Display Selection","text":"<p>For displaying real-time sensor data, we compared different LCD options.</p>"},{"location":"Component_Selection/#lcd-display-options","title":"LCD Display Options","text":"LCD Display Description Photo Pros Cons Cost Link East Rising ERM1602FS-6 16x2 character LCD with I2C interface Low cost, easy interface Requires external I2C module $2.55 Link HD44780 1602 Standard 16x2 character LCD Widely supported, cheap Requires more GPIO pins $3.00 Link SSD1306 OLED High-contrast OLED display Compact, modern look More expensive $3.70 Link"},{"location":"Component_Selection/#optimal-choice_3","title":"Optimal Choice:","text":"<p>The EastRising ERM1602FS-6 was chosen due to its alignment with our design and minimal power usage.</p>"},{"location":"Component_Selection/#esp32-table","title":"ESP32 Table","text":""},{"location":"Component_Selection/#esp32-wroom-32-information","title":"ESP32-WROOM-32 Information","text":"<ul> <li>Model: ESP32-DEVKITC-32UE</li> <li>Product Page: Link</li> <li>Datasheet: Link</li> <li>Technical Reference Manual: Link</li> <li>Unit Cost: $10.00</li> <li>Maximum Current: 500 mA</li> </ul> Module Available Needed Associated Pins UART 3 1 GPIO1, GPIO3 SPI 3 1 GPIO19, GPIO23, GPIO18, GPIO5 I2C 2 1 GPIO21, GPIO22 GPIO 39 Varies Various ADC 18 1 GPIO34"},{"location":"Component_Selection/#image-can-be-viewed-on-the-link-which-is-at-the-top-of-the-document","title":"(Image can be viewed on the link, which is at the top of the document)","text":""},{"location":"Component_Selection/#personal-responsibilities","title":"Personal Responsibilities","text":"<p>As an essential team member, I oversee the management of the LCD module in our project. My responsibilities include ensuring effective communication between the microcontroller and the display, setting up the I2C interface, and developing firmware to display relevant data. Additionally, I manage the power requirements of the LCD module, ensuring it functions optimally within the system\u2019s power constraints.</p> <p>I also collaborate with other subsystems to ensure smooth data integration, troubleshoot signal integrity issues, and confirm the LCD's compatibility with the ESP32 microcontroller.</p>"},{"location":"Component_Selection/#pinout-diagrams","title":"Pinout Diagrams","text":""},{"location":"Component_Selection/#microchip-pic18f47q10-pinout-diagram","title":"Microchip PIC18F47Q10 Pinout Diagram","text":""},{"location":"Component_Selection/#image-can-be-viewed-on-the-link-which-is-at-the-top-of-the-document_1","title":"(Image can be viewed on the link, which is at the top of the document)","text":""},{"location":"Component_Selection/#esp32-wroom-32-pinout-diagram","title":"ESP32-WROOM-32 Pinout Diagram","text":""},{"location":"Component_Selection/#image-can-be-viewed-on-the-link-which-is-at-the-top-of-the-document_2","title":"(Image can be viewed on the link, which is at the top of the document)","text":""},{"location":"Component_Selection/#conclusion","title":"Conclusion","text":"<p>This report outlines the rationale behind the selection of key components for our design, focusing on factors such as performance, power efficiency, and compatibility. Each choice was made to meet the specific requirements of the project.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}